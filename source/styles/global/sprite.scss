// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$audiopro-2-name: 'audiopro — 2';
$audiopro-2-x: 0px;
$audiopro-2-y: 0px;
$audiopro-2-offset-x: 0px;
$audiopro-2-offset-y: 0px;
$audiopro-2-width: 129px;
$audiopro-2-height: 59px;
$audiopro-2-total-width: 387px;
$audiopro-2-total-height: 236px;
$audiopro-2-image: '../images/sprite.png';
$audiopro-2: (0px, 0px, 0px, 0px, 129px, 59px, 387px, 236px, '../images/sprite.png', 'audiopro — 2', );
$audiopro-name: 'audiopro';
$audiopro-x: 0px;
$audiopro-y: 59px;
$audiopro-offset-x: 0px;
$audiopro-offset-y: -59px;
$audiopro-width: 129px;
$audiopro-height: 59px;
$audiopro-total-width: 387px;
$audiopro-total-height: 236px;
$audiopro-image: '../images/sprite.png';
$audiopro: (0px, 59px, 0px, -59px, 129px, 59px, 387px, 236px, '../images/sprite.png', 'audiopro', );
$infinity-2-name: 'infinity — 2';
$infinity-2-x: 129px;
$infinity-2-y: 0px;
$infinity-2-offset-x: -129px;
$infinity-2-offset-y: 0px;
$infinity-2-width: 129px;
$infinity-2-height: 59px;
$infinity-2-total-width: 387px;
$infinity-2-total-height: 236px;
$infinity-2-image: '../images/sprite.png';
$infinity-2: (129px, 0px, -129px, 0px, 129px, 59px, 387px, 236px, '../images/sprite.png', 'infinity — 2', );
$infinity-name: 'infinity';
$infinity-x: 129px;
$infinity-y: 59px;
$infinity-offset-x: -129px;
$infinity-offset-y: -59px;
$infinity-width: 129px;
$infinity-height: 59px;
$infinity-total-width: 387px;
$infinity-total-height: 236px;
$infinity-image: '../images/sprite.png';
$infinity: (129px, 59px, -129px, -59px, 129px, 59px, 387px, 236px, '../images/sprite.png', 'infinity', );
$rko-2-name: 'rko — 2';
$rko-2-x: 0px;
$rko-2-y: 118px;
$rko-2-offset-x: 0px;
$rko-2-offset-y: -118px;
$rko-2-width: 129px;
$rko-2-height: 59px;
$rko-2-total-width: 387px;
$rko-2-total-height: 236px;
$rko-2-image: '../images/sprite.png';
$rko-2: (0px, 118px, 0px, -118px, 129px, 59px, 387px, 236px, '../images/sprite.png', 'rko — 2', );
$rko-name: 'rko';
$rko-x: 129px;
$rko-y: 118px;
$rko-offset-x: -129px;
$rko-offset-y: -118px;
$rko-width: 129px;
$rko-height: 59px;
$rko-total-width: 387px;
$rko-total-height: 236px;
$rko-image: '../images/sprite.png';
$rko: (129px, 118px, -129px, -118px, 129px, 59px, 387px, 236px, '../images/sprite.png', 'rko', );
$sport-name: 'sport';
$sport-x: 0px;
$sport-y: 177px;
$sport-offset-x: 0px;
$sport-offset-y: -177px;
$sport-width: 129px;
$sport-height: 59px;
$sport-total-width: 387px;
$sport-total-height: 236px;
$sport-image: '../images/sprite.png';
$sport: (0px, 177px, 0px, -177px, 129px, 59px, 387px, 236px, '../images/sprite.png', 'sport', );
$swan-name: 'swan';
$swan-x: 129px;
$swan-y: 177px;
$swan-offset-x: -129px;
$swan-offset-y: -177px;
$swan-width: 129px;
$swan-height: 59px;
$swan-total-width: 387px;
$swan-total-height: 236px;
$swan-image: '../images/sprite.png';
$swan: (129px, 177px, -129px, -177px, 129px, 59px, 387px, 236px, '../images/sprite.png', 'swan', );
$swancer-name: 'swancer';
$swancer-x: 258px;
$swancer-y: 0px;
$swancer-offset-x: -258px;
$swancer-offset-y: 0px;
$swancer-width: 129px;
$swancer-height: 59px;
$swancer-total-width: 387px;
$swancer-total-height: 236px;
$swancer-image: '../images/sprite.png';
$swancer: (258px, 0px, -258px, 0px, 129px, 59px, 387px, 236px, '../images/sprite.png', 'swancer', );
$spritesheet-width: 387px;
$spritesheet-height: 236px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($audiopro-2, $audiopro, $infinity-2, $infinity, $rko-2, $rko, $sport, $swan, $swancer, );
$spritesheet: (387px, 236px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
